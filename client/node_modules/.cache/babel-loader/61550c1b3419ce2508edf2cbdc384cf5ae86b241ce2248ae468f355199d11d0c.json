{"ast":null,"code":"var _jsxFileName = \"/Users/sidmarkurthi/Documents/fitbit_spotify/client/src/components/pages/PlaylistPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaylistPage() {\n  function get_avg_heart() {\n    if (localStorage.getItem('fitbit_access_token')) {\n      let access_token = localStorage.getItem('fitbit_access_token');\n      try {\n        const response = axios.get('http://localhost:8888/fitbitfavorites', {\n          headers: {\n            token: access_token\n          }\n        });\n        app.get('/fitbitfavorites', async function (req, res) {\n          const received_data = req.body; // data put in the get request from react\n          try {\n            console.log('access token:');\n            console.log(req.headers.token);\n            // making the function aysnc so that it won't continue until we get a response from fitbit\n            const fitbit_response = await axios.get('https://api.fitbit.com/1/user/-/profile.json', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + req.headers.token\n              }\n            });\n            const fitbit_data = fitbit_response.data;\n            console.log(fitbit_data);\n            res.send(fitbit_data);\n          } catch (error) {\n            console.log('err');\n            res.status(500).send('Failed to fetch favorite workouts');\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  function fav_workouts() {}\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: get_avg_heart,\n    children: \"Favorites\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_c = PlaylistPage;\nexport default PlaylistPage;\nvar _c;\n$RefreshReg$(_c, \"PlaylistPage\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","PlaylistPage","get_avg_heart","localStorage","getItem","access_token","response","get","headers","token","app","req","res","received_data","body","console","log","fitbit_response","method","fitbit_data","data","send","error","status","fav_workouts","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sidmarkurthi/Documents/fitbit_spotify/client/src/components/pages/PlaylistPage.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios';\n\nfunction PlaylistPage() {\n    function get_avg_heart() {\n        if (localStorage.getItem('fitbit_access_token')) {\n            let access_token = localStorage.getItem('fitbit_access_token');\n            try {\n                const response = axios.get('http://localhost:8888/fitbitfavorites', {\n                    headers: {\n                        token: access_token\n                    }\n                });\n                app.get('/fitbitfavorites', async function(req, res) {\n  const received_data = req.body; // data put in the get request from react\n  try {\n    console.log('access token:');\n\n    console.log(req.headers.token);\n    // making the function aysnc so that it won't continue until we get a response from fitbit\n    const fitbit_response = await axios.get('https://api.fitbit.com/1/user/-/profile.json', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + req.headers.token\n      }\n    })\n\n    const fitbit_data = fitbit_response.data;\n    console.log(fitbit_data);\n    res.send(fitbit_data);\n  }\n  catch (error) {\n    console.log('err')\n    res.status(500).send('Failed to fetch favorite workouts');\n  }\n})\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    function fav_workouts() {\n\n    }\n  return (\n      <button onClick={get_avg_heart}>Favorites</button>\n  )\n}\n\nexport default PlaylistPage\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EACpB,SAASC,aAAaA,CAAA,EAAG;IACrB,IAAIC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,EAAE;MAC7C,IAAIC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;MAC9D,IAAI;QACA,MAAME,QAAQ,GAAGR,KAAK,CAACS,GAAG,CAAC,uCAAuC,EAAE;UAChEC,OAAO,EAAE;YACLC,KAAK,EAAEJ;UACX;QACJ,CAAC,CAAC;QACFK,GAAG,CAACH,GAAG,CAAC,kBAAkB,EAAE,gBAAeI,GAAG,EAAEC,GAAG,EAAE;UACnE,MAAMC,aAAa,GAAGF,GAAG,CAACG,IAAI,CAAC,CAAC;UAChC,IAAI;YACFC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;YAE5BD,OAAO,CAACC,GAAG,CAACL,GAAG,CAACH,OAAO,CAACC,KAAK,CAAC;YAC9B;YACA,MAAMQ,eAAe,GAAG,MAAMnB,KAAK,CAACS,GAAG,CAAC,8CAA8C,EAAE;cACtFW,MAAM,EAAE,KAAK;cACbV,OAAO,EAAE;gBACP,eAAe,EAAE,SAAS,GAAGG,GAAG,CAACH,OAAO,CAACC;cAC3C;YACF,CAAC,CAAC;YAEF,MAAMU,WAAW,GAAGF,eAAe,CAACG,IAAI;YACxCL,OAAO,CAACC,GAAG,CAACG,WAAW,CAAC;YACxBP,GAAG,CAACS,IAAI,CAACF,WAAW,CAAC;UACvB,CAAC,CACD,OAAOG,KAAK,EAAE;YACZP,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;YAClBJ,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC,mCAAmC,CAAC;UAC3D;QACF,CAAC,CAAC;MACU,CAAC,CACD,OAAOC,KAAK,EAAE;QACVP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MACtB;IACJ;EACJ;EAEA,SAASE,YAAYA,CAAA,EAAG,CAExB;EACF,oBACIxB,OAAA;IAAQyB,OAAO,EAAEvB,aAAc;IAAAwB,QAAA,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAExD;AAACC,EAAA,GA9CQ9B,YAAY;AAgDrB,eAAeA,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}